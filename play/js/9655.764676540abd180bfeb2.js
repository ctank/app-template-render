"use strict";(self.webpackChunkapp_template_builder=self.webpackChunkapp_template_builder||[]).push([[9655],{38452:function(e,t,n){n.d(t,{A:function(){return u}});var o=n(17416),i=n(38050),r=n(60854),a=n(61669),s=n(27319),l=n(50038),m=n(8964);class u{static deleteRight(e,t,n,o){const r=[];let a=3!==e;for(let e=0,m=o.length;e<m;e++){const m=o[e];let u=m;if(u.isEmpty()){const e=m.getPosition(),o=s.o.right(t,n,e);u=new l.e(o.lineNumber,o.column,e.lineNumber,e.column)}u.isEmpty()?r[e]=null:(u.startLineNumber!==u.endLineNumber&&(a=!0),r[e]=new i.T4(u,""))}return[a,r]}static isAutoClosingPairDelete(e,t,n,o,i,a,s){if("never"===t&&"never"===n)return!1;if("never"===e)return!1;for(let l=0,m=a.length;l<m;l++){const m=a[l],u=m.getPosition();if(!m.isEmpty())return!1;const c=i.getLineContent(u.lineNumber);if(u.column<2||u.column>=c.length+1)return!1;const d=c.charAt(u.column-2),w=o.get(d);if(!w)return!1;if((0,r.LN)(d)){if("never"===n)return!1}else if("never"===t)return!1;const f=c.charAt(u.column-1);let v=!1;for(const e of w)e.open===d&&e.close===f&&(v=!0);if(!v)return!1;if("auto"===e){let e=!1;for(let t=0,n=s.length;t<n;t++){const n=s[t];if(u.lineNumber===n.startLineNumber&&u.column===n.startColumn){e=!0;break}}if(!e)return!1}}return!0}static _runAutoClosingPairDelete(e,t,n){const o=[];for(let e=0,t=n.length;e<t;e++){const t=n[e].getPosition(),r=new l.e(t.lineNumber,t.column-1,t.lineNumber,t.column+1);o[e]=new i.T4(r,"")}return[!0,o]}static deleteLeft(e,t,n,o,r){if(this.isAutoClosingPairDelete(t.autoClosingDelete,t.autoClosingBrackets,t.autoClosingQuotes,t.autoClosingPairs.autoClosingPairsOpenByEnd,n,o,r))return this._runAutoClosingPairDelete(t,n,o);const a=[];let s=2!==e;for(let e=0,r=o.length;e<r;e++){const r=u.getDeleteRange(o[e],n,t);r.isEmpty()?a[e]=null:(r.startLineNumber!==r.endLineNumber&&(s=!0),a[e]=new i.T4(r,""))}return[s,a]}static getDeleteRange(e,t,n){if(!e.isEmpty())return e;const i=e.getPosition();if(n.useTabStops&&i.column>1){const e=t.getLineContent(i.lineNumber),r=o.LC(e),s=-1===r?e.length+1:r+1;if(i.column<=s){const e=n.visibleColumnFromColumn(t,i),o=a.i.prevIndentTabStop(e,n.indentSize),r=n.columnFromVisibleColumn(t,i.lineNumber,o);return new l.e(i.lineNumber,r,i.lineNumber,i.column)}}return l.e.fromPositions(u.getPositionAfterDeleteLeft(i,t),i)}static getPositionAfterDeleteLeft(e,t){if(e.column>1){const n=o.oH(e.column-1,t.getLineContent(e.lineNumber));return e.with(void 0,n+1)}if(e.lineNumber>1){const n=e.lineNumber-1;return new m.L(n,t.getLineMaxColumn(n))}return e}static cut(e,t,n){const o=[];let a=null;n.sort(((e,t)=>m.L.compare(e.getStartPosition(),t.getEndPosition())));for(let r=0,s=n.length;r<s;r++){const s=n[r];if(s.isEmpty())if(e.emptySelectionClipboard){const e=s.getPosition();let n,m,u,c;e.lineNumber<t.getLineCount()?(n=e.lineNumber,m=1,u=e.lineNumber+1,c=1):e.lineNumber>1&&(null==a?void 0:a.endLineNumber)!==e.lineNumber?(n=e.lineNumber-1,m=t.getLineMaxColumn(e.lineNumber-1),u=e.lineNumber,c=t.getLineMaxColumn(e.lineNumber)):(n=e.lineNumber,m=1,u=e.lineNumber,c=t.getLineMaxColumn(e.lineNumber));const d=new l.e(n,m,u,c);a=d,d.isEmpty()?o[r]=null:o[r]=new i.T4(d,"")}else o[r]=null;else o[r]=new i.T4(s,"")}return new r.Tp(0,o,{shouldPushStackElementBefore:!0,shouldPushStackElementAfter:!0})}}},81953:function(e,t,n){n.d(t,{N:function(){return o},P:function(){return u}});var o,i=n(14818),r=n(60854),a=n(27319),s=n(61958),l=n(8964),m=n(50038);class u{static addCursorDown(e,t,n){const o=[];let i=0;for(let s=0,l=t.length;s<l;s++){const l=t[s];o[i++]=new r.Vi(l.modelState,l.viewState),o[i++]=n?r.Vi.fromModelState(a.o.translateDown(e.cursorConfig,e.model,l.modelState)):r.Vi.fromViewState(a.o.translateDown(e.cursorConfig,e,l.viewState))}return o}static addCursorUp(e,t,n){const o=[];let i=0;for(let s=0,l=t.length;s<l;s++){const l=t[s];o[i++]=new r.Vi(l.modelState,l.viewState),o[i++]=n?r.Vi.fromModelState(a.o.translateUp(e.cursorConfig,e.model,l.modelState)):r.Vi.fromViewState(a.o.translateUp(e.cursorConfig,e,l.viewState))}return o}static moveToBeginningOfLine(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];o[i]=this._moveToLineStart(e,r,n)}return o}static _moveToLineStart(e,t,n){const o=t.viewState.position.column,i=o===t.modelState.position.column,r=t.viewState.position.lineNumber,a=e.getLineFirstNonWhitespaceColumn(r);return i||o===a?this._moveToLineStartByModel(e,t,n):this._moveToLineStartByView(e,t,n)}static _moveToLineStartByView(e,t,n){return r.Vi.fromViewState(a.o.moveToBeginningOfLine(e.cursorConfig,e,t.viewState,n))}static _moveToLineStartByModel(e,t,n){return r.Vi.fromModelState(a.o.moveToBeginningOfLine(e.cursorConfig,e.model,t.modelState,n))}static moveToEndOfLine(e,t,n,o){const i=[];for(let r=0,a=t.length;r<a;r++){const a=t[r];i[r]=this._moveToLineEnd(e,a,n,o)}return i}static _moveToLineEnd(e,t,n,o){const i=t.viewState.position,r=e.getLineMaxColumn(i.lineNumber),a=i.column===r,s=t.modelState.position,l=e.model.getLineMaxColumn(s.lineNumber),m=r-i.column==l-s.column;return a||m?this._moveToLineEndByModel(e,t,n,o):this._moveToLineEndByView(e,t,n,o)}static _moveToLineEndByView(e,t,n,o){return r.Vi.fromViewState(a.o.moveToEndOfLine(e.cursorConfig,e,t.viewState,n,o))}static _moveToLineEndByModel(e,t,n,o){return r.Vi.fromModelState(a.o.moveToEndOfLine(e.cursorConfig,e.model,t.modelState,n,o))}static expandLineSelection(e,t){const n=[];for(let o=0,i=t.length;o<i;o++){const i=t[o],a=i.modelState.selection.startLineNumber,s=e.model.getLineCount();let u,c=i.modelState.selection.endLineNumber;c===s?u=e.model.getLineMaxColumn(s):(c++,u=1),n[o]=r.Vi.fromModelState(new r.rS(new m.e(a,1,a,1),0,new l.L(c,u),0))}return n}static moveToBeginningOfBuffer(e,t,n){const o=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];o[i]=r.Vi.fromModelState(a.o.moveToBeginningOfBuffer(e.cursorConfig,e.model,s.modelState,n))}return o}static moveToEndOfBuffer(e,t,n){const o=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];o[i]=r.Vi.fromModelState(a.o.moveToEndOfBuffer(e.cursorConfig,e.model,s.modelState,n))}return o}static selectAll(e,t){const n=e.model.getLineCount(),o=e.model.getLineMaxColumn(n);return r.Vi.fromModelState(new r.rS(new m.e(1,1,1,1),0,new l.L(n,o),0))}static line(e,t,n,o,i){const a=e.model.validatePosition(o),s=i?e.coordinatesConverter.validateViewPosition(new l.L(i.lineNumber,i.column),a):e.coordinatesConverter.convertModelPositionToViewPosition(a);if(!n||!t.modelState.hasSelection()){const t=e.model.getLineCount();let n=a.lineNumber+1,o=1;return n>t&&(n=t,o=e.model.getLineMaxColumn(n)),r.Vi.fromModelState(new r.rS(new m.e(a.lineNumber,1,n,o),0,new l.L(n,o),0))}const u=t.modelState.selectionStart.getStartPosition().lineNumber;if(a.lineNumber<u)return r.Vi.fromViewState(t.viewState.move(t.modelState.hasSelection(),s.lineNumber,1,0));if(a.lineNumber>u){const n=e.getLineCount();let o=s.lineNumber+1,i=1;return o>n&&(o=n,i=e.getLineMaxColumn(o)),r.Vi.fromViewState(t.viewState.move(t.modelState.hasSelection(),o,i,0))}{const e=t.modelState.selectionStart.getEndPosition();return r.Vi.fromModelState(t.modelState.move(t.modelState.hasSelection(),e.lineNumber,e.column,0))}}static word(e,t,n,o){const i=e.model.validatePosition(o);return r.Vi.fromModelState(s.w.word(e.cursorConfig,e.model,t.modelState,n,i))}static cancelSelection(e,t){if(!t.modelState.hasSelection())return new r.Vi(t.modelState,t.viewState);const n=t.viewState.position.lineNumber,o=t.viewState.position.column;return r.Vi.fromViewState(new r.rS(new m.e(n,o,n,o),0,new l.L(n,o),0))}static moveTo(e,t,n,o,i){const a=e.model.validatePosition(o),s=i?e.coordinatesConverter.validateViewPosition(new l.L(i.lineNumber,i.column),a):e.coordinatesConverter.convertModelPositionToViewPosition(a);return r.Vi.fromViewState(t.viewState.move(n,s.lineNumber,s.column,0))}static simpleMove(e,t,n,o,i,s){switch(n){case 0:return 4===s?this._moveHalfLineLeft(e,t,o):this._moveLeft(e,t,o,i);case 1:return 4===s?this._moveHalfLineRight(e,t,o):this._moveRight(e,t,o,i);case 2:return 2===s?this._moveUpByViewLines(e,t,o,i):this._moveUpByModelLines(e,t,o,i);case 3:return 2===s?this._moveDownByViewLines(e,t,o,i):this._moveDownByModelLines(e,t,o,i);case 4:return 2===s?t.map((t=>r.Vi.fromViewState(a.o.moveToPrevBlankLine(e.cursorConfig,e,t.viewState,o)))):t.map((t=>r.Vi.fromModelState(a.o.moveToPrevBlankLine(e.cursorConfig,e.model,t.modelState,o))));case 5:return 2===s?t.map((t=>r.Vi.fromViewState(a.o.moveToNextBlankLine(e.cursorConfig,e,t.viewState,o)))):t.map((t=>r.Vi.fromModelState(a.o.moveToNextBlankLine(e.cursorConfig,e.model,t.modelState,o))));case 6:return this._moveToViewMinColumn(e,t,o);case 7:return this._moveToViewFirstNonWhitespaceColumn(e,t,o);case 8:return this._moveToViewCenterColumn(e,t,o);case 9:return this._moveToViewMaxColumn(e,t,o);case 10:return this._moveToViewLastNonWhitespaceColumn(e,t,o);default:return null}}static viewportMove(e,t,n,o,i){const r=e.getCompletelyVisibleViewRange(),a=e.coordinatesConverter.convertViewRangeToModelRange(r);switch(n){case 11:{const n=this._firstLineNumberInRange(e.model,a,i),r=e.model.getLineFirstNonWhitespaceColumn(n);return[this._moveToModelPosition(e,t[0],o,n,r)]}case 13:{const n=this._lastLineNumberInRange(e.model,a,i),r=e.model.getLineFirstNonWhitespaceColumn(n);return[this._moveToModelPosition(e,t[0],o,n,r)]}case 12:{const n=Math.round((a.startLineNumber+a.endLineNumber)/2),i=e.model.getLineFirstNonWhitespaceColumn(n);return[this._moveToModelPosition(e,t[0],o,n,i)]}case 14:{const n=[];for(let i=0,a=t.length;i<a;i++){const a=t[i];n[i]=this.findPositionInViewportIfOutside(e,a,r,o)}return n}default:return null}}static findPositionInViewportIfOutside(e,t,n,o){const i=t.viewState.position.lineNumber;if(n.startLineNumber<=i&&i<=n.endLineNumber-1)return new r.Vi(t.modelState,t.viewState);{let s;s=i>n.endLineNumber-1?n.endLineNumber-1:i<n.startLineNumber?n.startLineNumber:i;const l=a.o.vertical(e.cursorConfig,e,i,t.viewState.position.column,t.viewState.leftoverVisibleColumns,s,!1);return r.Vi.fromViewState(t.viewState.move(o,l.lineNumber,l.column,l.leftoverVisibleColumns))}}static _firstLineNumberInRange(e,t,n){let o=t.startLineNumber;return t.startColumn!==e.getLineMinColumn(o)&&o++,Math.min(t.endLineNumber,o+n-1)}static _lastLineNumberInRange(e,t,n){let o=t.startLineNumber;return t.startColumn!==e.getLineMinColumn(o)&&o++,Math.max(o,t.endLineNumber-n+1)}static _moveLeft(e,t,n,o){return t.map((t=>r.Vi.fromViewState(a.o.moveLeft(e.cursorConfig,e,t.viewState,n,o))))}static _moveHalfLineLeft(e,t,n){const o=[];for(let i=0,s=t.length;i<s;i++){const s=t[i],l=s.viewState.position.lineNumber,m=Math.round(e.getLineContent(l).length/2);o[i]=r.Vi.fromViewState(a.o.moveLeft(e.cursorConfig,e,s.viewState,n,m))}return o}static _moveRight(e,t,n,o){return t.map((t=>r.Vi.fromViewState(a.o.moveRight(e.cursorConfig,e,t.viewState,n,o))))}static _moveHalfLineRight(e,t,n){const o=[];for(let i=0,s=t.length;i<s;i++){const s=t[i],l=s.viewState.position.lineNumber,m=Math.round(e.getLineContent(l).length/2);o[i]=r.Vi.fromViewState(a.o.moveRight(e.cursorConfig,e,s.viewState,n,m))}return o}static _moveDownByViewLines(e,t,n,o){const i=[];for(let s=0,l=t.length;s<l;s++){const l=t[s];i[s]=r.Vi.fromViewState(a.o.moveDown(e.cursorConfig,e,l.viewState,n,o))}return i}static _moveDownByModelLines(e,t,n,o){const i=[];for(let s=0,l=t.length;s<l;s++){const l=t[s];i[s]=r.Vi.fromModelState(a.o.moveDown(e.cursorConfig,e.model,l.modelState,n,o))}return i}static _moveUpByViewLines(e,t,n,o){const i=[];for(let s=0,l=t.length;s<l;s++){const l=t[s];i[s]=r.Vi.fromViewState(a.o.moveUp(e.cursorConfig,e,l.viewState,n,o))}return i}static _moveUpByModelLines(e,t,n,o){const i=[];for(let s=0,l=t.length;s<l;s++){const l=t[s];i[s]=r.Vi.fromModelState(a.o.moveUp(e.cursorConfig,e.model,l.modelState,n,o))}return i}static _moveToViewPosition(e,t,n,o,i){return r.Vi.fromViewState(t.viewState.move(n,o,i,0))}static _moveToModelPosition(e,t,n,o,i){return r.Vi.fromModelState(t.modelState.move(n,o,i,0))}static _moveToViewMinColumn(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i],a=r.viewState.position.lineNumber,s=e.getLineMinColumn(a);o[i]=this._moveToViewPosition(e,r,n,a,s)}return o}static _moveToViewFirstNonWhitespaceColumn(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i],a=r.viewState.position.lineNumber,s=e.getLineFirstNonWhitespaceColumn(a);o[i]=this._moveToViewPosition(e,r,n,a,s)}return o}static _moveToViewCenterColumn(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i],a=r.viewState.position.lineNumber,s=Math.round((e.getLineMaxColumn(a)+e.getLineMinColumn(a))/2);o[i]=this._moveToViewPosition(e,r,n,a,s)}return o}static _moveToViewMaxColumn(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i],a=r.viewState.position.lineNumber,s=e.getLineMaxColumn(a);o[i]=this._moveToViewPosition(e,r,n,a,s)}return o}static _moveToViewLastNonWhitespaceColumn(e,t,n){const o=[];for(let i=0,r=t.length;i<r;i++){const r=t[i],a=r.viewState.position.lineNumber,s=e.getLineLastNonWhitespaceColumn(a);o[i]=this._moveToViewPosition(e,r,n,a,s)}return o}}!function(e){e.description={description:"Move cursor to a logical position in the view",args:[{name:"Cursor move argument object",description:"Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory logical position value providing where to move the cursor.\n\t\t\t\t\t\t```\n\t\t\t\t\t\t'left', 'right', 'up', 'down', 'prevBlankLine', 'nextBlankLine',\n\t\t\t\t\t\t'wrappedLineStart', 'wrappedLineEnd', 'wrappedLineColumnCenter'\n\t\t\t\t\t\t'wrappedLineFirstNonWhitespaceCharacter', 'wrappedLineLastNonWhitespaceCharacter'\n\t\t\t\t\t\t'viewPortTop', 'viewPortCenter', 'viewPortBottom', 'viewPortIfOutside'\n\t\t\t\t\t\t```\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t```\n\t\t\t\t\t\t'line', 'wrappedLine', 'character', 'halfLine'\n\t\t\t\t\t\t```\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'select': If 'true' makes the selection. Default is 'false'.\n\t\t\t\t",constraint:function(e){if(!i.Kn(e))return!1;const t=e;return!!i.HD(t.to)&&(!(!i.o8(t.select)&&!i.jn(t.select))&&(!(!i.o8(t.by)&&!i.HD(t.by))&&!(!i.o8(t.value)&&!i.hj(t.value))))},schema:{type:"object",required:["to"],properties:{to:{type:"string",enum:["left","right","up","down","prevBlankLine","nextBlankLine","wrappedLineStart","wrappedLineEnd","wrappedLineColumnCenter","wrappedLineFirstNonWhitespaceCharacter","wrappedLineLastNonWhitespaceCharacter","viewPortTop","viewPortCenter","viewPortBottom","viewPortIfOutside"]},by:{type:"string",enum:["line","wrappedLine","character","halfLine"]},value:{type:"number",default:1},select:{type:"boolean",default:!1}}}}]},e.RawDirection={Left:"left",Right:"right",Up:"up",Down:"down",PrevBlankLine:"prevBlankLine",NextBlankLine:"nextBlankLine",WrappedLineStart:"wrappedLineStart",WrappedLineFirstNonWhitespaceCharacter:"wrappedLineFirstNonWhitespaceCharacter",WrappedLineColumnCenter:"wrappedLineColumnCenter",WrappedLineEnd:"wrappedLineEnd",WrappedLineLastNonWhitespaceCharacter:"wrappedLineLastNonWhitespaceCharacter",ViewPortTop:"viewPortTop",ViewPortCenter:"viewPortCenter",ViewPortBottom:"viewPortBottom",ViewPortIfOutside:"viewPortIfOutside"},e.RawUnit={Line:"line",WrappedLine:"wrappedLine",Character:"character",HalfLine:"halfLine"},e.parse=function(t){if(!t.to)return null;let n;switch(t.to){case e.RawDirection.Left:n=0;break;case e.RawDirection.Right:n=1;break;case e.RawDirection.Up:n=2;break;case e.RawDirection.Down:n=3;break;case e.RawDirection.PrevBlankLine:n=4;break;case e.RawDirection.NextBlankLine:n=5;break;case e.RawDirection.WrappedLineStart:n=6;break;case e.RawDirection.WrappedLineFirstNonWhitespaceCharacter:n=7;break;case e.RawDirection.WrappedLineColumnCenter:n=8;break;case e.RawDirection.WrappedLineEnd:n=9;break;case e.RawDirection.WrappedLineLastNonWhitespaceCharacter:n=10;break;case e.RawDirection.ViewPortTop:n=11;break;case e.RawDirection.ViewPortBottom:n=13;break;case e.RawDirection.ViewPortCenter:n=12;break;case e.RawDirection.ViewPortIfOutside:n=14;break;default:return null}let o=0;switch(t.by){case e.RawUnit.Line:o=1;break;case e.RawUnit.WrappedLine:o=2;break;case e.RawUnit.Character:o=3;break;case e.RawUnit.HalfLine:o=4}return{direction:n,unit:o,select:!!t.select,value:t.value||1}}}(o||(o={}))}}]);