"use strict";(self.webpackChunkapp_template_builder=self.webpackChunkapp_template_builder||[]).push([[3531],{83388:function(e,t,n){n.d(t,{U:function(){return r}});var i=n(38431);class r extends i.JT{constructor(){super(...arguments),this._isDisposed=!1}dispose(){super.dispose(),this._isDisposed=!0}assertNotDisposed(){if(this._isDisposed)throw new Error("TextModelPart is disposed!")}}},58461:function(e,t,n){n.d(t,{bc:function(){return a},cM:function(){return d},iE:function(){return c},pM:function(){return h},sz:function(){return f}});var i=n(17416),r=n(31599),s=n(8964),u=n(50038),o=n(41913);class a{constructor(e,t,n,i){this.searchString=e,this.isRegex=t,this.matchCase=n,this.wordSeparators=i}parseSearchRequest(){if(""===this.searchString)return null;let e;e=this.isRegex?function(e){if(!e||0===e.length)return!1;for(let t=0,n=e.length;t<n;t++){const i=e.charCodeAt(t);if(10===i)return!0;if(92===i){if(t++,t>=n)break;const i=e.charCodeAt(t);if(110===i||114===i||87===i)return!0}}return!1}(this.searchString):this.searchString.indexOf("\n")>=0;let t=null;try{t=i.GF(this.searchString,this.isRegex,{matchCase:this.matchCase,wholeWord:!1,multiline:e,global:!0,unicode:!0})}catch(e){return null}if(!t)return null;let n=!this.isRegex&&!e;return n&&this.searchString.toLowerCase()!==this.searchString.toUpperCase()&&(n=this.matchCase),new o.Tx(t,this.wordSeparators?(0,r.u)(this.wordSeparators):null,n?this.searchString:null)}}function c(e,t,n){if(!n)return new o.tk(e,null);const i=[];for(let e=0,n=t.length;e<n;e++)i[e]=t[e];return new o.tk(e,i)}class l{constructor(e){const t=[];let n=0;for(let i=0,r=e.length;i<r;i++)10===e.charCodeAt(i)&&(t[n++]=i);this._lineFeedsOffsets=t}findLineFeedCountBeforeOffset(e){const t=this._lineFeedsOffsets;let n=0,i=t.length-1;if(-1===i)return 0;if(e<=t[0])return 0;for(;n<i;){const r=n+((i-n)/2>>0);t[r]>=e?i=r-1:t[r+1]>=e?(n=r,i=r):n=r+1}return n+1}}class h{static findMatches(e,t,n,i,r){const s=t.parseSearchRequest();return s?s.regex.multiline?this._doFindMatchesMultiline(e,n,new f(s.wordSeparators,s.regex),i,r):this._doFindMatchesLineByLine(e,n,s,i,r):[]}static _getMultilineMatchRange(e,t,n,i,r,s){let o,a,c=0;if(i?(c=i.findLineFeedCountBeforeOffset(r),o=t+r+c):o=t+r,i){const e=i.findLineFeedCountBeforeOffset(r+s.length)-c;a=o+s.length+e}else a=o+s.length;const l=e.getPositionAt(o),h=e.getPositionAt(a);return new u.e(l.lineNumber,l.column,h.lineNumber,h.column)}static _doFindMatchesMultiline(e,t,n,i,r){const s=e.getOffsetAt(t.getStartPosition()),u=e.getValueInRange(t,1),o="\r\n"===e.getEOL()?new l(u):null,a=[];let h,d=0;for(n.reset(0);h=n.next(u);)if(a[d++]=c(this._getMultilineMatchRange(e,s,u,o,h.index,h[0]),h,i),d>=r)return a;return a}static _doFindMatchesLineByLine(e,t,n,i,r){const s=[];let u=0;if(t.startLineNumber===t.endLineNumber){const o=e.getLineContent(t.startLineNumber).substring(t.startColumn-1,t.endColumn-1);return u=this._findMatchesInLine(n,o,t.startLineNumber,t.startColumn-1,u,s,i,r),s}const o=e.getLineContent(t.startLineNumber).substring(t.startColumn-1);u=this._findMatchesInLine(n,o,t.startLineNumber,t.startColumn-1,u,s,i,r);for(let o=t.startLineNumber+1;o<t.endLineNumber&&u<r;o++)u=this._findMatchesInLine(n,e.getLineContent(o),o,0,u,s,i,r);if(u<r){const o=e.getLineContent(t.endLineNumber).substring(0,t.endColumn-1);u=this._findMatchesInLine(n,o,t.endLineNumber,0,u,s,i,r)}return s}static _findMatchesInLine(e,t,n,i,r,s,a,l){const h=e.wordSeparators;if(!a&&e.simpleSearch){const a=e.simpleSearch,c=a.length,f=t.length;let g=-c;for(;-1!==(g=t.indexOf(a,g+c));)if((!h||d(h,t,f,g,c))&&(s[r++]=new o.tk(new u.e(n,g+1+i,n,g+1+c+i),null),r>=l))return r;return r}const g=new f(e.wordSeparators,e.regex);let L;g.reset(0);do{if(L=g.next(t),L&&(s[r++]=c(new u.e(n,L.index+1+i,n,L.index+1+L[0].length+i),L,a),r>=l))return r}while(L);return r}static findNextMatch(e,t,n,i){const r=t.parseSearchRequest();if(!r)return null;const s=new f(r.wordSeparators,r.regex);return r.regex.multiline?this._doFindNextMatchMultiline(e,n,s,i):this._doFindNextMatchLineByLine(e,n,s,i)}static _doFindNextMatchMultiline(e,t,n,i){const r=new s.L(t.lineNumber,1),o=e.getOffsetAt(r),a=e.getLineCount(),h=e.getValueInRange(new u.e(r.lineNumber,r.column,a,e.getLineMaxColumn(a)),1),d="\r\n"===e.getEOL()?new l(h):null;n.reset(t.column-1);const f=n.next(h);return f?c(this._getMultilineMatchRange(e,o,h,d,f.index,f[0]),f,i):1!==t.lineNumber||1!==t.column?this._doFindNextMatchMultiline(e,new s.L(1,1),n,i):null}static _doFindNextMatchLineByLine(e,t,n,i){const r=e.getLineCount(),s=t.lineNumber,u=e.getLineContent(s),o=this._findFirstMatchInLine(n,u,s,t.column,i);if(o)return o;for(let t=1;t<=r;t++){const u=(s+t-1)%r,o=e.getLineContent(u+1),a=this._findFirstMatchInLine(n,o,u+1,1,i);if(a)return a}return null}static _findFirstMatchInLine(e,t,n,i,r){e.reset(i-1);const s=e.next(t);return s?c(new u.e(n,s.index+1,n,s.index+1+s[0].length),s,r):null}static findPreviousMatch(e,t,n,i){const r=t.parseSearchRequest();if(!r)return null;const s=new f(r.wordSeparators,r.regex);return r.regex.multiline?this._doFindPreviousMatchMultiline(e,n,s,i):this._doFindPreviousMatchLineByLine(e,n,s,i)}static _doFindPreviousMatchMultiline(e,t,n,i){const r=this._doFindMatchesMultiline(e,new u.e(1,1,t.lineNumber,t.column),n,i,9990);if(r.length>0)return r[r.length-1];const o=e.getLineCount();return t.lineNumber!==o||t.column!==e.getLineMaxColumn(o)?this._doFindPreviousMatchMultiline(e,new s.L(o,e.getLineMaxColumn(o)),n,i):null}static _doFindPreviousMatchLineByLine(e,t,n,i){const r=e.getLineCount(),s=t.lineNumber,u=e.getLineContent(s).substring(0,t.column-1),o=this._findLastMatchInLine(n,u,s,i);if(o)return o;for(let t=1;t<=r;t++){const u=(r+s-t-1)%r,o=e.getLineContent(u+1),a=this._findLastMatchInLine(n,o,u+1,i);if(a)return a}return null}static _findLastMatchInLine(e,t,n,i){let r,s=null;for(e.reset(0);r=e.next(t);)s=c(new u.e(n,r.index+1,n,r.index+1+r[0].length),r,i);return s}}function d(e,t,n,i,r){return function(e,t,n,i,r){if(0===i)return!0;const s=t.charCodeAt(i-1);if(0!==e.get(s))return!0;if(13===s||10===s)return!0;if(r>0){const n=t.charCodeAt(i);if(0!==e.get(n))return!0}return!1}(e,t,0,i,r)&&function(e,t,n,i,r){if(i+r===n)return!0;const s=t.charCodeAt(i+r);if(0!==e.get(s))return!0;if(13===s||10===s)return!0;if(r>0){const n=t.charCodeAt(i+r-1);if(0!==e.get(n))return!0}return!1}(e,t,n,i,r)}class f{constructor(e,t){this._wordSeparators=e,this._searchRegex=t,this._prevMatchStartIndex=-1,this._prevMatchLength=0}reset(e){this._searchRegex.lastIndex=e,this._prevMatchStartIndex=-1,this._prevMatchLength=0}next(e){const t=e.length;let n;do{if(this._prevMatchStartIndex+this._prevMatchLength===t)return null;if(n=this._searchRegex.exec(e),!n)return null;const r=n.index,s=n[0].length;if(r===this._prevMatchStartIndex&&s===this._prevMatchLength){if(0===s){i.ZH(e,t,this._searchRegex.lastIndex)>65535?this._searchRegex.lastIndex+=2:this._searchRegex.lastIndex+=1;continue}return null}if(this._prevMatchStartIndex=r,this._prevMatchLength=s,!this._wordSeparators||d(this._wordSeparators,e,t,r,s))return n}while(n);return null}}}}]);