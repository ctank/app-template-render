"use strict";(self.webpackChunkapp_template_builder=self.webpackChunkapp_template_builder||[]).push([[1132],{75616:function(e,t,n){function r(e){return!function(e){return Array.isArray(e)}(e)}function o(e){return"string"==typeof e}function i(e){return!o(e)}function s(e){return!e}function u(e,t){return e.ignoreCase&&t?t.toLowerCase():t}function a(e){return e.replace(/[&<>'"_]/g,"-")}function c(e,t){}function f(e,t){return new Error(`${e.languageId}: ${t}`)}function l(e,t,n,r,o){let i=null;return t.replace(/\$((\$)|(#)|(\d\d?)|[sS](\d\d?)|@(\w+))/g,(function(t,a,c,f,l,h,g,d,p){return s(c)?s(f)?!s(l)&&l<r.length?u(e,r[l]):!s(g)&&e&&"string"==typeof e[g]?e[g]:(null===i&&(i=o.split("."),i.unshift(o)),!s(h)&&h<i.length?u(e,i[h]):""):u(e,n):"$"}))}function h(e,t){let n=t;for(;n&&n.length>0;){const t=e.tokenizer[n];if(t)return t;const r=n.lastIndexOf(".");n=r<0?null:n.substr(0,r)}return null}function g(e,t){let n=t;for(;n&&n.length>0;){if(e.stateNames[n])return!0;const t=n.lastIndexOf(".");n=t<0?null:n.substr(0,t)}return!1}n.d(t,{DG:function(){return h},HD:function(){return o},Nw:function(){return a},Qy:function(){return g},Tr:function(){return f},cM:function(){return c},cS:function(){return s},j:function(){return i},kF:function(){return l},v5:function(){return r},ve:function(){return u}})},76732:function(e,t,n){n.d(t,{M:function(){return l}});var r=n(75616);function o(e,t){return"boolean"==typeof e?e:t}function i(e,t){return"string"==typeof e?e:t}function s(e,t=!1){t&&(e=e.map((function(e){return e.toLowerCase()})));const n=function(e){const t={};for(const n of e)t[n]=!0;return t}(e);return t?function(e){return void 0!==n[e.toLowerCase()]&&n.hasOwnProperty(e.toLowerCase())}:function(e){return void 0!==n[e]&&n.hasOwnProperty(e)}}function u(e,t){t=t.replace(/@@/g,"");let n,o=0;do{n=!1,t=t.replace(/@(\w+)/g,(function(o,i){n=!0;let s="";if("string"==typeof e[i])s=e[i];else{if(!(e[i]&&e[i]instanceof RegExp))throw void 0===e[i]?r.Tr(e,"language definition does not contain attribute '"+i+"', used at: "+t):r.Tr(e,"attribute reference '"+i+"' must be a string, used at: "+t);s=e[i].source}return r.cS(s)?"":"(?:"+s+")"})),o++}while(n&&o<5);t=t.replace(/\x01/g,"@");const i=(e.ignoreCase?"i":"")+(e.unicode?"u":"");return new RegExp(t,i)}function a(e,t,n,o){let i=-1,a=n,c=n.match(/^\$(([sS]?)(\d\d?)|#)(.*)$/);c&&(c[3]&&(i=parseInt(c[3]),c[2]&&(i+=100)),a=c[4]);let f,l="~",h=a;if(a&&0!==a.length?/^\w*$/.test(h)?l="==":(c=a.match(/^(@|!@|~|!~|==|!=)(.*)$/),c&&(l=c[1],h=c[2])):(l="!=",h=""),"~"!==l&&"!~"!==l||!/^(\w|\|)*$/.test(h))if("@"===l||"!@"===l){const n=e[h];if(!n)throw r.Tr(e,"the @ match target '"+h+"' is not defined, in rule: "+t);if(!function(e,t){if(!t)return!1;if(!Array.isArray(t))return!1;for(const n of t)if(!e(n))return!1;return!0}((function(e){return"string"==typeof e}),n))throw r.Tr(e,"the @ match target '"+h+"' must be an array of strings, in rule: "+t);const o=s(n,e.ignoreCase);f=function(e){return"@"===l?o(e):!o(e)}}else if("~"===l||"!~"===l)if(h.indexOf("$")<0){const t=u(e,"^"+h+"$");f=function(e){return"~"===l?t.test(e):!t.test(e)}}else f=function(t,n,o,i){return u(e,"^"+r.kF(e,h,n,o,i)+"$").test(t)};else if(h.indexOf("$")<0){const t=r.ve(e,h);f=function(e){return"=="===l?e===t:e!==t}}else{const t=r.ve(e,h);f=function(n,o,i,s,u){const a=r.kF(e,t,o,i,s);return"=="===l?n===a:n!==a}}else{const t=s(h.split("|"),e.ignoreCase);f=function(e){return"~"===l?t(e):!t(e)}}return-1===i?{name:n,value:o,test:function(e,t,n,r){return f(e,e,t,n,r)}}:{name:n,value:o,test:function(e,t,n,r){const o=function(e,t,n,r){if(r<0)return e;if(r<t.length)return t[r];if(r>=100){r-=100;const e=n.split(".");if(e.unshift(n),r<e.length)return e[r]}return null}(e,t,n,i);return f(o||"",e,t,n,r)}}}function c(e,t,n){if(n){if("string"==typeof n)return n;if(n.token||""===n.token){if("string"!=typeof n.token)throw r.Tr(e,"a 'token' attribute must be of type string, in rule: "+t);{const o={token:n.token};if(n.token.indexOf("$")>=0&&(o.tokenSubst=!0),"string"==typeof n.bracket)if("@open"===n.bracket)o.bracket=1;else{if("@close"!==n.bracket)throw r.Tr(e,"a 'bracket' attribute must be either '@open' or '@close', in rule: "+t);o.bracket=-1}if(n.next){if("string"!=typeof n.next)throw r.Tr(e,"the next state must be a string value in rule: "+t);{let i=n.next;if(!/^(@pop|@push|@popall)$/.test(i)&&("@"===i[0]&&(i=i.substr(1)),i.indexOf("$")<0&&!r.Qy(e,r.kF(e,i,"",[],""))))throw r.Tr(e,"the next state '"+n.next+"' is not defined in rule: "+t);o.next=i}}return"number"==typeof n.goBack&&(o.goBack=n.goBack),"string"==typeof n.switchTo&&(o.switchTo=n.switchTo),"string"==typeof n.log&&(o.log=n.log),"string"==typeof n.nextEmbedded&&(o.nextEmbedded=n.nextEmbedded,e.usesEmbedded=!0),o}}if(Array.isArray(n)){const r=[];for(let o=0,i=n.length;o<i;o++)r[o]=c(e,t,n[o]);return{group:r}}if(n.cases){const r=[];for(const o in n.cases)if(n.cases.hasOwnProperty(o)){const i=c(e,t,n.cases[o]);"@default"===o||"@"===o||""===o?r.push({test:void 0,value:i,name:o}):"@eos"===o?r.push({test:function(e,t,n,r){return r},value:i,name:o}):r.push(a(e,t,o,i))}const o=e.defaultToken;return{test:function(e,t,n,i){for(const o of r){if(!o.test||o.test(e,t,n,i))return o.value}return o}}}throw r.Tr(e,"an action must be a string, an object with a 'token' or 'cases' attribute, or an array of actions; in rule: "+t)}return{token:""}}class f{constructor(e){this.regex=new RegExp(""),this.action={token:""},this.matchOnlyAtLineStart=!1,this.name="",this.name=e}setRegex(e,t){let n;if("string"==typeof t)n=t;else{if(!(t instanceof RegExp))throw r.Tr(e,"rules must start with a match string or regular expression: "+this.name);n=t.source}this.matchOnlyAtLineStart=n.length>0&&"^"===n[0],this.name=this.name+": "+n,this.regex=u(e,"^(?:"+(this.matchOnlyAtLineStart?n.substr(1):n)+")")}setAction(e,t){this.action=c(e,this.name,t)}}function l(e,t){if(!t||"object"!=typeof t)throw new Error("Monarch: expecting a language definition object");const n={};n.languageId=e,n.includeLF=o(t.includeLF,!1),n.noThrow=!1,n.maxStack=100,n.start="string"==typeof t.start?t.start:null,n.ignoreCase=o(t.ignoreCase,!1),n.unicode=o(t.unicode,!1),n.tokenPostfix=i(t.tokenPostfix,"."+n.languageId),n.defaultToken=i(t.defaultToken,"source"),n.usesEmbedded=!1;const s=t;function u(e,i,a){for(const c of a){let a=c.include;if(a){if("string"!=typeof a)throw r.Tr(n,"an 'include' attribute must be a string at: "+e);if("@"===a[0]&&(a=a.substr(1)),!t.tokenizer[a])throw r.Tr(n,"include target '"+a+"' is not defined at: "+e);u(e+"."+a,i,t.tokenizer[a])}else{const t=new f(e);if(Array.isArray(c)&&c.length>=1&&c.length<=3)if(t.setRegex(s,c[0]),c.length>=3)if("string"==typeof c[1])t.setAction(s,{token:c[1],next:c[2]});else{if("object"!=typeof c[1])throw r.Tr(n,"a next state as the last element of a rule can only be given if the action is either an object or a string, at: "+e);{const e=c[1];e.next=c[2],t.setAction(s,e)}}else t.setAction(s,c[1]);else{if(!c.regex)throw r.Tr(n,"a rule must either be an array, or an object with a 'regex' or 'include' field at: "+e);c.name&&"string"==typeof c.name&&(t.name=c.name),c.matchOnlyAtStart&&(t.matchOnlyAtLineStart=o(c.matchOnlyAtLineStart,!1)),t.setRegex(s,c.regex),t.setAction(s,c.action)}i.push(t)}}}if(s.languageId=e,s.includeLF=n.includeLF,s.ignoreCase=n.ignoreCase,s.unicode=n.unicode,s.noThrow=n.noThrow,s.usesEmbedded=n.usesEmbedded,s.stateNames=t.tokenizer,s.defaultToken=n.defaultToken,!t.tokenizer||"object"!=typeof t.tokenizer)throw r.Tr(n,"a language definition must define the 'tokenizer' attribute as an object");n.tokenizer=[];for(const e in t.tokenizer)if(t.tokenizer.hasOwnProperty(e)){n.start||(n.start=e);const r=t.tokenizer[e];n.tokenizer[e]=new Array,u("tokenizer."+e,n.tokenizer[e],r)}if(n.usesEmbedded=s.usesEmbedded,t.brackets){if(!Array.isArray(t.brackets))throw r.Tr(n,"the 'brackets' attribute must be defined as an array")}else t.brackets=[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"<",close:">",token:"delimiter.angle"}];const a=[];for(const e of t.brackets){let t=e;if(t&&Array.isArray(t)&&3===t.length&&(t={token:t[2],open:t[0],close:t[1]}),t.open===t.close)throw r.Tr(n,"open and close brackets in a 'brackets' attribute must be different: "+t.open+"\n hint: use the 'bracket' attribute if matching on equal brackets is required.");if("string"!=typeof t.open||"string"!=typeof t.token||"string"!=typeof t.close)throw r.Tr(n,"every element in the 'brackets' array must be a '{open,close,token}' object or array");a.push({token:t.token+n.tokenPostfix,open:r.ve(n,t.open),close:r.ve(n,t.close)})}return n.brackets=a,n.noThrow=!0,n}}}]);